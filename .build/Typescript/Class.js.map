{
  "version": 3,
  "sources": ["../../Typescript/Class.ts"],
  "sourcesContent": ["\ninterface Address {\n  street : string ;\n  city : string ;\n  state : string;\n  pin : number;\n}\n\nclass Employee {\n  #id : number; // private variable\n protected name : string ;\n  address : Address ;\n  // getter and setter \n  get empId(): number {\n    return this.#id\n  }\n  set empId(id : number) {\n    this.#id = id;\n  }\n  // constructor in typescript\n  constructor( id : number , name : string , address : Address){\n    this.#id = id ;\n    this.name = name;\n    this.address = address;\n  }\n  // methods static and non-static\n  getName() : string {\n    return this.name;\n  } \n  static emplyeeCount() : number {\n    return 50;\n  }\n}\n// inheritance \nclass Manager extends Employee{\n  constructor( id : number , name : string , address : Address){\n    super(id , name , address)\n  }\n}\n// example code \nclass Thing {\n  _size = 0;\n  get size(): number {\n    return this._size;\n  }\n  set size(value: string | number | boolean) {\n    let num = Number(value);\n    // Don't allow NaN, Infinity, etc\n    if (!Number.isFinite(num)) {\n      this._size = 0;\n      return;\n    }\n    this._size = num;\n  }\n}\n\n// driver code \nlet raj : Manager = new Manager(2 , \"raj sigal\",  \n{ street: \"ABC\" ,\n city : \"bangalore\" , \n state :  \"karnatak\"  , \n pin : 59001} );\n\nlet yuvraj : Employee = new Employee(1 , \"yuvraj Singh\" ,  {\n  street: \"XYZ\" ,\n  city : \"mumbai\" ,\n  state :  \"Maharasta\"  ,\n  pin : 55986} );\n\nconsole.log(yuvraj);\n let Res =yuvraj.address;\nconsole.log(Res);\nconsole.log(raj.getName());\nconsole.log(Employee.emplyeeCount())\n\n\n"],
  "mappings": ";AAQA,MAAM,SAAS;AAAA,EACb;AAAA,EAIA,IAAI,QAAgB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM,IAAa;AACrB,SAAK,MAAM;AAAA,EACb;AAAA,EAEA,YAAa,IAAc,MAAgB,SAAkB;AAC3D,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,UAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO,eAAwB;AAC7B,WAAO;AAAA,EACT;AACF;AAEA,MAAM,gBAAgB,SAAQ;AAAA,EAC5B,YAAa,IAAc,MAAgB,SAAkB;AAC3D,UAAM,IAAK,MAAO,OAAO;AAAA,EAC3B;AACF;AAEA,MAAM,MAAM;AAAA,EAAZ;AACE,iBAAQ;AAAA;AAAA,EACR,IAAI,OAAe;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,KAAK,OAAkC;AACzC,QAAI,MAAM,OAAO,KAAK;AAEtB,QAAI,CAAC,OAAO,SAAS,GAAG,GAAG;AACzB,WAAK,QAAQ;AACb;AAAA,IACF;AACA,SAAK,QAAQ;AAAA,EACf;AACF;AAGA,IAAI,MAAgB,IAAI;AAAA,EAAQ;AAAA,EAAI;AAAA,EACpC;AAAA,IAAE,QAAQ;AAAA,IACT,MAAO;AAAA,IACP,OAAS;AAAA,IACT,KAAM;AAAA,EAAK;AAAE;AAEd,IAAI,SAAoB,IAAI,SAAS,GAAI,gBAAkB;AAAA,EACzD,QAAQ;AAAA,EACR,MAAO;AAAA,EACP,OAAS;AAAA,EACT,KAAM;AAAK,CAAE;AAEf,QAAQ,IAAI,MAAM;AACjB,IAAI,MAAK,OAAO;AACjB,QAAQ,IAAI,GAAG;AACf,QAAQ,IAAI,IAAI,QAAQ,CAAC;AACzB,QAAQ,IAAI,SAAS,aAAa,CAAC;",
  "names": []
}
