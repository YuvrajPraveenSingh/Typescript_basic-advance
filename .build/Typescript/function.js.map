{
  "version": 3,
  "sources": ["../../Typescript/function.ts"],
  "sourcesContent": ["\nfunction Add(a : number , b : number) : number\n  {\n    return a+ b;\n  }\nconsole.log( Add(3 ,33));\n\nconst sub = (n1 : number , n2 : number ):number => n1 - n2 ;\nconst mult = function(n1 : number , n2 : number) :number{\n  return n1 * n2\n}\nconsole.log( sub(36 ,33), mult(3 ,33));\n\n// optional n3 variable\nfunction Addition(a : number , b : number , c? : number ) : number\n{\n    //optional chaining ..... \n    return c? a+ b +c : a + b;\n  }\nconsole.log( Addition(3 ,3), Addition(3 ,3 , 3));\n\nfunction add2(a :number , b : number , ...c : number[]) :number{\n  return a + b + c.reduce((acc , num) => acc + num ) ;\n}\n// rest function\nlet num : number[] = [2 ,22 ,12];\nconsole.log(\"add2 function : \" + add2(3 ,2 , ...num));\n//  geniric function  \n\nfunction getItem<type>(items : type[]) :type[] {\n  return new Array<type>().concat(items);\n}\nlet concatResult1 = getItem([2 ,22 ,12]);\nlet concatResult2 = getItem([\"2\" , '22' , '12']);\nconsole.log(concatResult1);\nconsole.log(concatResult2);"],
  "mappings": ";AACA,SAAS,IAAI,GAAa,GACxB;AACE,SAAO,IAAG;AACZ;AACF,QAAQ,IAAK,IAAI,GAAG,EAAE,CAAC;AAEvB,MAAM,MAAM,CAAC,IAAc,OAAwB,KAAK;AACxD,MAAM,OAAO,SAAS,IAAc,IAAoB;AACtD,SAAO,KAAK;AACd;AACA,QAAQ,IAAK,IAAI,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;AAGrC,SAAS,SAAS,GAAa,GAAa,GAC5C;AAEI,SAAO,IAAG,IAAG,IAAG,IAAI,IAAI;AAC1B;AACF,QAAQ,IAAK,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,GAAI,CAAC,CAAC;AAE/C,SAAS,KAAK,GAAY,MAAgB,GAAqB;AAC7D,SAAO,IAAI,IAAI,EAAE,OAAO,CAAC,KAAMA,SAAQ,MAAMA,IAAI;AACnD;AAEA,IAAI,MAAiB,CAAC,GAAG,IAAI,EAAE;AAC/B,QAAQ,IAAI,qBAAqB,KAAK,GAAG,GAAI,GAAG,GAAG,CAAC;AAGpD,SAAS,QAAc,OAAwB;AAC7C,SAAO,IAAI,MAAY,EAAE,OAAO,KAAK;AACvC;AACA,IAAI,gBAAgB,QAAQ,CAAC,GAAG,IAAI,EAAE,CAAC;AACvC,IAAI,gBAAgB,QAAQ,CAAC,KAAM,MAAO,IAAI,CAAC;AAC/C,QAAQ,IAAI,aAAa;AACzB,QAAQ,IAAI,aAAa;",
  "names": ["num"]
}
